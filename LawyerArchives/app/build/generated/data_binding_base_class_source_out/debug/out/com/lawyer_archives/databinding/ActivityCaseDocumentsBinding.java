// Generated by view binder compiler. Do not edit!
package com.lawyer_archives.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.lawyer_archives.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCaseDocumentsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button addDocumentButton;

  @NonNull
  public final TextView documentsHeader;

  @NonNull
  public final RecyclerView documentsRecyclerView;

  private ActivityCaseDocumentsBinding(@NonNull RelativeLayout rootView,
      @NonNull Button addDocumentButton, @NonNull TextView documentsHeader,
      @NonNull RecyclerView documentsRecyclerView) {
    this.rootView = rootView;
    this.addDocumentButton = addDocumentButton;
    this.documentsHeader = documentsHeader;
    this.documentsRecyclerView = documentsRecyclerView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCaseDocumentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCaseDocumentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_case_documents, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCaseDocumentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addDocumentButton;
      Button addDocumentButton = ViewBindings.findChildViewById(rootView, id);
      if (addDocumentButton == null) {
        break missingId;
      }

      id = R.id.documentsHeader;
      TextView documentsHeader = ViewBindings.findChildViewById(rootView, id);
      if (documentsHeader == null) {
        break missingId;
      }

      id = R.id.documentsRecyclerView;
      RecyclerView documentsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (documentsRecyclerView == null) {
        break missingId;
      }

      return new ActivityCaseDocumentsBinding((RelativeLayout) rootView, addDocumentButton,
          documentsHeader, documentsRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
